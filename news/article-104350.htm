<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2rayngnode.github.io/news/article-104350.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>多线程与高并发原理篇：3_java内存模型</title>
        <meta name="description" content="1. 概述 Java 内存模型即 Java Memory Model，简称 JMM。从抽象的角度来看，JMM 定义了线程和主内存之间的抽象关系，线程之间的共享变量存储在主内存中，每个线程都有一个私有的" />
        <link rel="icon" href="/assets/website/img/v2rayngnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2rayNG Node免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayngnode.github.io/news/article-104350.htm" />
    <meta property="og:site_name" content="V2rayNG Node免费机场订阅节点官网" />
    <meta property="og:title" content="多线程与高并发原理篇：3_java内存模型" />
    <meta property="og:image" content="https://v2rayngnode.github.io/uploads/20241110-1/95c3617cb0d721f959364eda0a28c65c.webp" />
        <meta property="og:release_date" content="2025-04-26T07:38:17" />
    <meta property="og:updated_time" content="2025-04-26T07:38:17" />
        <meta property="og:description" content="1. 概述 Java 内存模型即 Java Memory Model，简称 JMM。从抽象的角度来看，JMM 定义了线程和主内存之间的抽象关系，线程之间的共享变量存储在主内存中，每个线程都有一个私有的" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="多线程与高并发原理篇：3_java内存模型">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- bootstrap v3.3.6 css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/bootstrap.min.css">
    <!-- owl.carousel css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/owl.carousel.css">
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/owl.transitions.css">
    <!-- meanmenu css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/meanmenu.min.css">
    <!-- font-awesome css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/icon.css">
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/flaticon.css">
    <!-- magnific css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/magnific.min.css">
    <!-- venobox css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/venobox.css">
    <!-- style css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/style.css">
    <!-- responsive css -->
    <link rel="stylesheet" href="/assets/website/css/v2rayngnode/responsive.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- modernizr css -->
    <script src="/assets/website/js/frontend/v2rayngnode/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-YN5VWR5N94"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-YN5VWR5N94');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div id="preloader"></div>
    <header class="header-two">
        <!-- header-area start -->
        <div id="sticker" class="header-area header-area-3 hidden-xs">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 col-sm-12">
                        <div class="header-center">
                            <div class="row">
                                <!-- logo start -->
                                <div class="col-md-3 col-sm-3">
                                    <div class="logo">
                                        <!-- Brand -->
                                        <a class="navbar-brand page-scroll sticky-logo" href="/">
                                                                                <span>V2rayNG Node</span>
                                                                                </a>
                                    </div>
                                </div>
                                <!-- logo end -->
                                <div class="col-md-9 col-sm-9">
                                    <!-- mainmenu start -->
                                    <nav class="navbar navbar-default">
                                        <div class="collapse navbar-collapse" id="navbar-example">
                                            <div class="main-menu">
                                                <ul class="nav navbar-nav navbar-right">
                                                                                                        <li><a href="/">首页</a></li>
                                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                                    </ul>
                                            </div>
                                        </div>
                                    </nav>
                                    <!-- mainmenu end -->
                                </div>
                                <!-- End column -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- header-area end -->
        <!-- mobile-menu-area start -->
        <div class="mobile-menu-area hidden-lg hidden-md hidden-sm">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="mobile-menu">
                            <div class="logo">
                                <a href="/">V2rayNG Node</a>
                            </div>
                            <nav id="dropdown">
                                <ul>
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                    </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- mobile-menu-area end -->
    </header>
    <!-- header end -->
    <!-- Start breadcumb Area -->
    <div class="page-area">
        <div class="breadcumb-overlay"></div>
        <div class="container">
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="breadcrumb">
                        <div class="bread-inner">
                            <div class="section-headline white-headline">
                                <h1>多线程与高并发原理篇：3_java内存模型</h1>
                            </div>
                            <ul class="breadcrumb-bg">
                                <li class="home-bread"><a href="/">首页</a></li>
                                <li class="home-bread"><a href="/news/">新闻资讯</a></li>
                                <li>正文</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End breadcumb Area -->
    <!-- about-area start -->
    <div class="about-area bg-gray area-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<h2 id="1-概述">1. 概述</h2> <p>Java 内存模型即 Java Memory Model，简称 JMM。从抽象的角度来看，JMM 定义了线程和主内存之间的<code>抽象关系</code>，线程之间的共享变量存储在主内存中，每个线程都有一个私有的<code>工作内存</code>，工作内存中存储了该线程以读/写共享变量的<code>副本</code>。工作内存是 JMM 的一个抽象概念，并不真实存在。它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。</p> <p>Java内存模型是跟cpu缓存模型是类似的，基于cpu缓存模型来建立的Java内存模型，只不过Java内存模型是标准化的，屏蔽掉底层不同的计算机的区别。</p> <h2 id="2-java内存模型带来的问题">2. Java内存模型带来的问题</h2> <p>Java内存模型规定了线程对主内存的操作具备<code>原子性</code>，包括以下8个操作：<br /> lock：主内存，标识变量为线程独占；<br /> unlock：主内存，解锁线程独占变量；<br /> read：主内存，读取内存到线程缓存（工作内存）；<br /> load：工作内存，read后的值放入线程本地变量副本；<br /> use：工作内存，传值给执行引擎；<br /> assign：工作内存，执行引擎结果赋值给线程本地变量；<br /> store：工作内存，存值到主内存给write备用；<br /> write：主内存，写变量值。</p> <p>假设如下程序，两个未加同步控制的线程去同时对i自增，会出现什么结果呢？</p> <pre><code class="language-java">public class Test {     private int i = 0;     public void increment() {         i++;         System.out.println("i=" + i);     }      public static void main(String[] args) {         Test t = new Test();         new Thread(() -&gt; t.increment()).start();         new Thread(() -&gt; t.increment()).start();     } }</code></pre> <p>通过运行会出现下面三种情况</p> <pre><code>i=1 i=1</code></pre> <p>或者</p> <pre><code>i=1 i=2</code></pre> <p>或者</p> <pre><code>i=2 i=2</code></pre> <p>下面通过图来解释第一种情况</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/eb7a34fa4ab756c76d386df45e32ab73.jpg" alt="多线程与高并发原理篇：3_java内存模型"></p> <p>A、B两个线程都有自己的工作内存，A自从执行read操作，从主内存读取i=0，随后load操作载入自己的工作内存，接着执行use操作，对i进行自增，然后从新赋值操作assign，此时线程A的工作内存i=1，随后store操作进行存储，最后写回到主内存，最终i=1。</p> <p>B线程也进行如此操作，read-&gt;load-&gt;use-&gt;assign-&gt;store-&gt;write，最终也得出i=1。</p> <p>出现第二种，关键在于B线程read操作是从A线程刷新到主内存后才去取值的。执行顺序是：线程A自增-&gt;线程A打印i最终值-&gt;线程B自增-&gt;线程B打印i最终值，如下图</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1d4be180c0e10ac48066f80492025f86.jpg" alt="多线程与高并发原理篇：3_java内存模型"></p> <p>出现第三种，是线程A自增后把i=1刷新到主内存，在执行打印之前，线程B优先从主内存获取i=1，进行read-&gt;load-&gt;use-&gt;assign-&gt;store-&gt;write，将i=1自增为i=2，随后线程A执行打印操作，执行顺序是：线程A自增-&gt;线程B自增-&gt;线程A打印i最终值-&gt;线程B打印i最终值，如下图</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/fde55b6f4c9590b3500c39c14ce12ca5.jpg" alt="多线程与高并发原理篇：3_java内存模型"></p> <h2 id="3-可见性有序性原子性">3. 可见性、有序性、原子性</h2> <p>虽然java内存模型JMM提供为每个线程提供了每个工作内存，存放共享变量的变量副本，但是如果线程没有作可见性的控制，从上述过程中可以看出，多线程下对共享变量的修改，其结果依然是不可预知的。</p> <h3 id="31-可见性">3.1 可见性</h3> <p>volatile关键词，在程序级别，保证对一个共享变量的修改对另外线程立马可见。上述程序对i加入volatile关键字，可以保证能始终得到第二种结果。</p> <p>下面用程序来演示：</p> <pre><code class="language-java">Class VolatileExample { 	int  a = 0; 	volatile boolean flg = false; 	 	public void writer() { 		a = 1; 		flg = true; 	} 	 	public void reader() { 		if (flg) { 			int i = a; 			...... 		} 	} }</code></pre> <p>图解如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/851f805e3e6e4ec5f48430d3093b297c.jpg" alt="多线程与高并发原理篇：3_java内存模型"><br /> 上述过程概括为两句话：<br /><code>当写一个volatile修饰的变量时，JMM会把线程对应的本地内存中的共享变量值刷新的主内存；</code><br /><code>当读一个volatile修饰的变量时，JMM会把该线程对应的本地内存置为无效，从主内存读取最新的共享变量的值。</code><br /> 上述过程解释了volatile的可见性问题。</p> <h3 id="32-有序性">3.2 有序性</h3> <p>对于一些代码，编译器或者处理器，为了提高代码执行效率，会将指令重排序，就是说比如下面的代码：</p> <pre><code class="language-java">flg = false; //线程1: parpare(); // 准备资源 flg = true;  //线程2: while(!flg) { 	Thread.sleep(1000); } execute();// 基于准备好的资源执行操作</code></pre> <p>重排序之后，让flag = true先执行了，会导致线程2直接跳过while等待，执行某段代码，结果prepare()方法还没执行，资源还没准备好呢，此时就会导致代码逻辑出现异常。</p> <p>volatile通过内存屏障，保证volatile修饰的变量，与其前后定义的值，不发生指令重排。JMM定义了如下四种内存屏障StoreStore、StoreLoad、LoadLoad、LoadStore;</p> <p>对于volatile写，在前面插入StoreStore，禁止上面的普通读与下面的volatile写重排序；后面插入StoreLoad，禁止上面的volatile写与下面的普通读重排序，如下图：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/0f9e6953f8cc97cb72920b496c012015.jpg" alt="多线程与高并发原理篇：3_java内存模型"></p> <p>对于volatile读，在后面插入LoadLoad，禁止上面的volatile读与下面的普通读重排序；下面再插入LoadStore，禁止上面的volatile读与下面的普通写重排序，如下图：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/de4efe32949579660821be8de61f0d49.jpg" alt="多线程与高并发原理篇：3_java内存模型"></p> <p><strong>happens-before原则</strong></p> <p>为了保证多线程之间在某些情况下一定不能发生指令重排，java内存模型规定了8条原则。</p> <ol> <li> <p><strong>程序次序规则</strong> ：一个线程内，按照代码顺序，书写在前面的操作先行发生于书写在后面的操作；</p> </li> <li> <p><strong>管程锁定规则</strong>：一个unLock操作先行发生于后面对<strong>同一个锁</strong>的lock操作；</p> </li> <li> <p><strong>volatile变量规则</strong>：对一个变量的写操作先行发生于后面对这个变量的读操作；</p> </li> <li> <p><strong>线程启动规则</strong>：Thread对象的start()方法先行发生于此线程的每个一个动作；</p> </li> <li> <p><strong>线程终结规则</strong>：线程中所有的操作都先行发生于线程的终止检测，我们可以通过Thread.join()方法结束、Thread.isAlive()的返回值手段检测到线程已经终止执行；</p> </li> <li> <p><strong>线程中断规则</strong>：对线程interrupt()方法的调用先行发生于被中断线程的代码检测到中断事件的发生；</p> </li> <li> <p><strong>对象终结规则</strong>：一个对象的初始化完成先行发生于他的finalize()方法的开始；</p> </li> <li> <p><strong>传递性</strong>：如果操作A先行发生于操作B，而操作B又先行发生于操作C，则可以得出操作A先行发生于操作C；</p> </li> </ol> <h3 id="33-原子性">3.3 原子性</h3> <p>一般情况下，volatile修饰的变量是不能保证原子性的，例如i++是复合操作，先读取，再修改变量的值，是不具备原子性的</p> <h2 id="4-volatile作用">4. volatile作用</h2> <p>通过上面的描述，可以得出volatile的作用主要有两点：</p> <ul> <li>保证线程可见性</li> <li>禁止指令重排序</li> </ul> <h2 id="5-hotspot层面实现">5. HotSpot层面实现</h2> <p>通过hsdis工具查看java汇编文件，首先下载hsdis-amd64.dll到 \jdk1.8\jre\bin ,然后设置VM参数，-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly</p> <p>最终执行时会在volatile变量前加如下信息</p> <pre><code class="language-java">lock addl $0x0,(%rsp)</code></pre> <p>如下图：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f7d7590233d0cc6dcdb2fff533f11c85.jpg" alt="多线程与高并发原理篇：3_java内存模型"></p> <h2 id="6-底层cpu硬件层面实现">6. 底层CPU硬件层面实现</h2> <p>上述过程中，JVM虚拟机会向CPU发送<code>lock前置指令</code>，将这个变量所在的缓存行数据写回主内存，如果其他CPU缓存的值是旧值，就会有问题，在多CPU（这里指多个核）下，每个CPU都会通过<code>嗅探</code>总线上传播的数据是否与自己的缓存一致，通过<code>缓存一致性协议</code>，最终保证多个CPU内部缓存数据的一致性，下面通过图来说明。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d361715cd9ac666a318cd87d8e988563.jpg" alt="多线程与高并发原理篇：3_java内存模型"></p> <p>虚拟机的lock前缀指令，在底层硬件是通过缓存一致性协议来完成的，不同的CPU缓存一致性协议不一样， 有MSI、MESI、MOSI、Synapse、Firefly及Dragon，英特尔CPU的缓存一致性协议是通过MESI来完成的。</p> <p>为了实现MESI协议，需要解释两个专业术语：<code>flush处理器缓存</code>、<code>refresh处理器缓存</code>。</p> <p>flush处理器缓存，他的意思就是把自己更新的值刷新到高速缓存里去（或者是主内存），因为必须要刷到高速缓存（或者是主内存）里，才有可能在后续通过一些特殊的机制让其他的处理器从自己的高速缓存（或者是主内存）里读取到更新的值。除了flush以外，他还会发送一个消息到总线（bus），通知其他处理器，某个变量的值被他给修改了。</p> <p>refresh处理器缓存，他的意思就是说，处理器中的线程在读取一个变量的值的时候，如果发现其他处理器的线程更新了变量的值，必须从其他处理器的高速缓存（或者是主内存）里，读取这个最新的值，更新到自己的高速缓存中。所以说，为了保证可见性，在底层是通过MESI协议、flush处理器缓存和refresh处理器缓存，这一整套机制来保障的。</p> <p>flush和refresh，这两个操作，flush是强制刷新数据到高速缓存（主内存），不要仅仅停留在写缓冲器里面；refresh，是从总线嗅探发现某个变量被修改，必须强制从其他处理器的高速缓存（或者主内存）加载变量的最新值到自己的高速缓存里去。</p> <h2 id="7-总结">7. 总结</h2> <p>本篇主要讲述了Java内存模型的作用，屏蔽了底层实现的细节，同时带来了一系列问题，导致线程之间的三大问题，即有序性、可见性、原子性，volatile关键字修饰的变量在多线程之间的作用，以及初步分析了底层是如何实现的，如果要深入分析，这个得具体看MESI协议规范，以及不同硬件底层的实现逻辑，比如英特尔的操作手册，后面有时间再接着深入。</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-104349.htm">SpringMVC 最详细笔记必备知识点</a></p>
                                        <p>下一个：<a href="/news/article-105167.htm">通过源码了解Java的自动装箱拆箱</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-4-24-free-node-subscribe.htm" title="V2rayNG Node节点订阅每天更新19.8M/S免费节点订阅链接地址分享">V2rayNG Node节点订阅每天更新19.8M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-80824.htm" title="MySQL 优化：explain 执行计划详解与示例分析">MySQL 优化：explain 执行计划详解与示例分析</a></li>
                        <li class="py-2"><a href="/news/article-68098.htm" title="动物疫苗注射方法视频讲解教程（动物疫苗接种方法）">动物疫苗注射方法视频讲解教程（动物疫苗接种方法）</a></li>
                        <li class="py-2"><a href="/news/article-98980.htm" title="动物医院连锁店有哪些 动物医院连锁店有哪些品牌">动物医院连锁店有哪些 动物医院连锁店有哪些品牌</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-30-free-node-subscribe-links.htm" title="V2rayNG Node节点订阅每天更新20.8M/S免费节点订阅链接地址分享">V2rayNG Node节点订阅每天更新20.8M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-node-share-links.htm" title="V2rayNG Node节点订阅每天更新22.5M/S免费节点订阅链接地址分享">V2rayNG Node节点订阅每天更新22.5M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-23-free-node-subscribe-links.htm" title="V2rayNG Node节点订阅每天更新22.5M/S免费节点订阅链接地址分享">V2rayNG Node节点订阅每天更新22.5M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-12-free-node-subscribe-links.htm" title="V2rayNG Node节点订阅每天更新18.8M/S免费节点订阅链接地址分享">V2rayNG Node节点订阅每天更新18.8M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-83618.htm" title="vue中Element UI表格分页功能的实现">vue中Element UI表格分页功能的实现</a></li>
                        <li class="py-2"><a href="/news/article-87941.htm" title="天义宠物医院电话号码多少（天福宠物医院）">天义宠物医院电话号码多少（天福宠物医院）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">78</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- about-area end -->
        <!-- Start Footer bottom Area -->
    <footer class="footer-3">
        <div class="footer-area-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        <div class="copyright">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">V2rayNG Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- all js here -->
    <!-- jquery latest version -->
    <script src="/assets/website/js/frontend/v2rayngnode/vendor/jquery-1.12.4.min.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/v2rayngnode/bootstrap.min.js"></script>
    <!-- owl.carousel js -->
    <script src="/assets/website/js/frontend/v2rayngnode/owl.carousel.min.js"></script>
    <!-- Counter js -->
    <script src="/assets/website/js/frontend/v2rayngnode/jquery.counterup.min.js"></script>
    <!-- waypoint js -->
    <script src="/assets/website/js/frontend/v2rayngnode/waypoints.js"></script>
    <!-- stellar js -->
    <script src="/assets/website/js/frontend/v2rayngnode/jquery.stellar.min.js"></script>
    <!-- Chart JS -->
    <script src="/assets/website/js/frontend/v2rayngnode/Chart.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayngnode/Chart.js"></script>
    <!-- magnific js -->
    <script src="/assets/website/js/frontend/v2rayngnode/magnific.min.js"></script>
    <!-- venobox js -->
    <script src="/assets/website/js/frontend/v2rayngnode/venobox.min.js"></script>
    <!-- meanmenu js -->
    <script src="/assets/website/js/frontend/v2rayngnode/jquery.meanmenu.js"></script>
    <!-- Form validator js -->
    <script src="/assets/website/js/frontend/v2rayngnode/form-validator.min.js"></script>
    <!-- plugins js -->
    <script src="/assets/website/js/frontend/v2rayngnode/plugins.js"></script>
    <!-- main js -->
    <script src="/assets/website/js/frontend/v2rayngnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>